// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/consensus_pb2/consensus.proto

package consensus

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConsensusRegisterResponse_Status int32

const (
	ConsensusRegisterResponse_STATUS_UNSET  ConsensusRegisterResponse_Status = 0
	ConsensusRegisterResponse_OK            ConsensusRegisterResponse_Status = 1
	ConsensusRegisterResponse_BAD_REQUEST   ConsensusRegisterResponse_Status = 2
	ConsensusRegisterResponse_SERVICE_ERROR ConsensusRegisterResponse_Status = 3
	ConsensusRegisterResponse_NOT_READY     ConsensusRegisterResponse_Status = 4
)

var ConsensusRegisterResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
}

var ConsensusRegisterResponse_Status_value = map[string]int32{
	"STATUS_UNSET":  0,
	"OK":            1,
	"BAD_REQUEST":   2,
	"SERVICE_ERROR": 3,
	"NOT_READY":     4,
}

func (x ConsensusRegisterResponse_Status) String() string {
	return proto.EnumName(ConsensusRegisterResponse_Status_name, int32(x))
}

func (ConsensusRegisterResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{6, 0}
}

type ConsensusSendToResponse_Status int32

const (
	ConsensusSendToResponse_STATUS_UNSET  ConsensusSendToResponse_Status = 0
	ConsensusSendToResponse_OK            ConsensusSendToResponse_Status = 1
	ConsensusSendToResponse_BAD_REQUEST   ConsensusSendToResponse_Status = 2
	ConsensusSendToResponse_SERVICE_ERROR ConsensusSendToResponse_Status = 3
	ConsensusSendToResponse_NOT_READY     ConsensusSendToResponse_Status = 4
	ConsensusSendToResponse_UNKNOWN_PEER  ConsensusSendToResponse_Status = 5
)

var ConsensusSendToResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
	5: "UNKNOWN_PEER",
}

var ConsensusSendToResponse_Status_value = map[string]int32{
	"STATUS_UNSET":  0,
	"OK":            1,
	"BAD_REQUEST":   2,
	"SERVICE_ERROR": 3,
	"NOT_READY":     4,
	"UNKNOWN_PEER":  5,
}

func (x ConsensusSendToResponse_Status) String() string {
	return proto.EnumName(ConsensusSendToResponse_Status_name, int32(x))
}

func (ConsensusSendToResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{16, 0}
}

type ConsensusBroadcastResponse_Status int32

const (
	ConsensusBroadcastResponse_STATUS_UNSET  ConsensusBroadcastResponse_Status = 0
	ConsensusBroadcastResponse_OK            ConsensusBroadcastResponse_Status = 1
	ConsensusBroadcastResponse_BAD_REQUEST   ConsensusBroadcastResponse_Status = 2
	ConsensusBroadcastResponse_SERVICE_ERROR ConsensusBroadcastResponse_Status = 3
	ConsensusBroadcastResponse_NOT_READY     ConsensusBroadcastResponse_Status = 4
)

var ConsensusBroadcastResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
}

var ConsensusBroadcastResponse_Status_value = map[string]int32{
	"STATUS_UNSET":  0,
	"OK":            1,
	"BAD_REQUEST":   2,
	"SERVICE_ERROR": 3,
	"NOT_READY":     4,
}

func (x ConsensusBroadcastResponse_Status) String() string {
	return proto.EnumName(ConsensusBroadcastResponse_Status_name, int32(x))
}

func (ConsensusBroadcastResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{18, 0}
}

type ConsensusInitializeBlockResponse_Status int32

const (
	ConsensusInitializeBlockResponse_STATUS_UNSET  ConsensusInitializeBlockResponse_Status = 0
	ConsensusInitializeBlockResponse_OK            ConsensusInitializeBlockResponse_Status = 1
	ConsensusInitializeBlockResponse_BAD_REQUEST   ConsensusInitializeBlockResponse_Status = 2
	ConsensusInitializeBlockResponse_SERVICE_ERROR ConsensusInitializeBlockResponse_Status = 3
	ConsensusInitializeBlockResponse_NOT_READY     ConsensusInitializeBlockResponse_Status = 4
	ConsensusInitializeBlockResponse_INVALID_STATE ConsensusInitializeBlockResponse_Status = 5
	ConsensusInitializeBlockResponse_UNKNOWN_BLOCK ConsensusInitializeBlockResponse_Status = 6
)

var ConsensusInitializeBlockResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
	5: "INVALID_STATE",
	6: "UNKNOWN_BLOCK",
}

var ConsensusInitializeBlockResponse_Status_value = map[string]int32{
	"STATUS_UNSET":  0,
	"OK":            1,
	"BAD_REQUEST":   2,
	"SERVICE_ERROR": 3,
	"NOT_READY":     4,
	"INVALID_STATE": 5,
	"UNKNOWN_BLOCK": 6,
}

func (x ConsensusInitializeBlockResponse_Status) String() string {
	return proto.EnumName(ConsensusInitializeBlockResponse_Status_name, int32(x))
}

func (ConsensusInitializeBlockResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{20, 0}
}

type ConsensusSummarizeBlockResponse_Status int32

const (
	ConsensusSummarizeBlockResponse_STATUS_UNSET    ConsensusSummarizeBlockResponse_Status = 0
	ConsensusSummarizeBlockResponse_OK              ConsensusSummarizeBlockResponse_Status = 1
	ConsensusSummarizeBlockResponse_BAD_REQUEST     ConsensusSummarizeBlockResponse_Status = 2
	ConsensusSummarizeBlockResponse_SERVICE_ERROR   ConsensusSummarizeBlockResponse_Status = 3
	ConsensusSummarizeBlockResponse_NOT_READY       ConsensusSummarizeBlockResponse_Status = 4
	ConsensusSummarizeBlockResponse_INVALID_STATE   ConsensusSummarizeBlockResponse_Status = 5
	ConsensusSummarizeBlockResponse_BLOCK_NOT_READY ConsensusSummarizeBlockResponse_Status = 6
)

var ConsensusSummarizeBlockResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
	5: "INVALID_STATE",
	6: "BLOCK_NOT_READY",
}

var ConsensusSummarizeBlockResponse_Status_value = map[string]int32{
	"STATUS_UNSET":    0,
	"OK":              1,
	"BAD_REQUEST":     2,
	"SERVICE_ERROR":   3,
	"NOT_READY":       4,
	"INVALID_STATE":   5,
	"BLOCK_NOT_READY": 6,
}

func (x ConsensusSummarizeBlockResponse_Status) String() string {
	return proto.EnumName(ConsensusSummarizeBlockResponse_Status_name, int32(x))
}

func (ConsensusSummarizeBlockResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{22, 0}
}

type ConsensusFinalizeBlockResponse_Status int32

const (
	ConsensusFinalizeBlockResponse_STATUS_UNSET    ConsensusFinalizeBlockResponse_Status = 0
	ConsensusFinalizeBlockResponse_OK              ConsensusFinalizeBlockResponse_Status = 1
	ConsensusFinalizeBlockResponse_BAD_REQUEST     ConsensusFinalizeBlockResponse_Status = 2
	ConsensusFinalizeBlockResponse_SERVICE_ERROR   ConsensusFinalizeBlockResponse_Status = 3
	ConsensusFinalizeBlockResponse_NOT_READY       ConsensusFinalizeBlockResponse_Status = 4
	ConsensusFinalizeBlockResponse_INVALID_STATE   ConsensusFinalizeBlockResponse_Status = 5
	ConsensusFinalizeBlockResponse_BLOCK_NOT_READY ConsensusFinalizeBlockResponse_Status = 6
)

var ConsensusFinalizeBlockResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
	5: "INVALID_STATE",
	6: "BLOCK_NOT_READY",
}

var ConsensusFinalizeBlockResponse_Status_value = map[string]int32{
	"STATUS_UNSET":    0,
	"OK":              1,
	"BAD_REQUEST":     2,
	"SERVICE_ERROR":   3,
	"NOT_READY":       4,
	"INVALID_STATE":   5,
	"BLOCK_NOT_READY": 6,
}

func (x ConsensusFinalizeBlockResponse_Status) String() string {
	return proto.EnumName(ConsensusFinalizeBlockResponse_Status_name, int32(x))
}

func (ConsensusFinalizeBlockResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{24, 0}
}

type ConsensusCancelBlockResponse_Status int32

const (
	ConsensusCancelBlockResponse_STATUS_UNSET  ConsensusCancelBlockResponse_Status = 0
	ConsensusCancelBlockResponse_OK            ConsensusCancelBlockResponse_Status = 1
	ConsensusCancelBlockResponse_BAD_REQUEST   ConsensusCancelBlockResponse_Status = 2
	ConsensusCancelBlockResponse_SERVICE_ERROR ConsensusCancelBlockResponse_Status = 3
	ConsensusCancelBlockResponse_NOT_READY     ConsensusCancelBlockResponse_Status = 4
	ConsensusCancelBlockResponse_INVALID_STATE ConsensusCancelBlockResponse_Status = 5
)

var ConsensusCancelBlockResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
	5: "INVALID_STATE",
}

var ConsensusCancelBlockResponse_Status_value = map[string]int32{
	"STATUS_UNSET":  0,
	"OK":            1,
	"BAD_REQUEST":   2,
	"SERVICE_ERROR": 3,
	"NOT_READY":     4,
	"INVALID_STATE": 5,
}

func (x ConsensusCancelBlockResponse_Status) String() string {
	return proto.EnumName(ConsensusCancelBlockResponse_Status_name, int32(x))
}

func (ConsensusCancelBlockResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{26, 0}
}

type ConsensusCheckBlocksResponse_Status int32

const (
	ConsensusCheckBlocksResponse_STATUS_UNSET  ConsensusCheckBlocksResponse_Status = 0
	ConsensusCheckBlocksResponse_OK            ConsensusCheckBlocksResponse_Status = 1
	ConsensusCheckBlocksResponse_BAD_REQUEST   ConsensusCheckBlocksResponse_Status = 2
	ConsensusCheckBlocksResponse_SERVICE_ERROR ConsensusCheckBlocksResponse_Status = 3
	ConsensusCheckBlocksResponse_NOT_READY     ConsensusCheckBlocksResponse_Status = 4
	ConsensusCheckBlocksResponse_UNKNOWN_BLOCK ConsensusCheckBlocksResponse_Status = 5
)

var ConsensusCheckBlocksResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
	5: "UNKNOWN_BLOCK",
}

var ConsensusCheckBlocksResponse_Status_value = map[string]int32{
	"STATUS_UNSET":  0,
	"OK":            1,
	"BAD_REQUEST":   2,
	"SERVICE_ERROR": 3,
	"NOT_READY":     4,
	"UNKNOWN_BLOCK": 5,
}

func (x ConsensusCheckBlocksResponse_Status) String() string {
	return proto.EnumName(ConsensusCheckBlocksResponse_Status_name, int32(x))
}

func (ConsensusCheckBlocksResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{28, 0}
}

type ConsensusCommitBlockResponse_Status int32

const (
	ConsensusCommitBlockResponse_STATUS_UNSET  ConsensusCommitBlockResponse_Status = 0
	ConsensusCommitBlockResponse_OK            ConsensusCommitBlockResponse_Status = 1
	ConsensusCommitBlockResponse_BAD_REQUEST   ConsensusCommitBlockResponse_Status = 2
	ConsensusCommitBlockResponse_SERVICE_ERROR ConsensusCommitBlockResponse_Status = 3
	ConsensusCommitBlockResponse_NOT_READY     ConsensusCommitBlockResponse_Status = 4
	ConsensusCommitBlockResponse_UNKNOWN_BLOCK ConsensusCommitBlockResponse_Status = 5
)

var ConsensusCommitBlockResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
	5: "UNKNOWN_BLOCK",
}

var ConsensusCommitBlockResponse_Status_value = map[string]int32{
	"STATUS_UNSET":  0,
	"OK":            1,
	"BAD_REQUEST":   2,
	"SERVICE_ERROR": 3,
	"NOT_READY":     4,
	"UNKNOWN_BLOCK": 5,
}

func (x ConsensusCommitBlockResponse_Status) String() string {
	return proto.EnumName(ConsensusCommitBlockResponse_Status_name, int32(x))
}

func (ConsensusCommitBlockResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{30, 0}
}

type ConsensusIgnoreBlockResponse_Status int32

const (
	ConsensusIgnoreBlockResponse_STATUS_UNSET  ConsensusIgnoreBlockResponse_Status = 0
	ConsensusIgnoreBlockResponse_OK            ConsensusIgnoreBlockResponse_Status = 1
	ConsensusIgnoreBlockResponse_BAD_REQUEST   ConsensusIgnoreBlockResponse_Status = 2
	ConsensusIgnoreBlockResponse_SERVICE_ERROR ConsensusIgnoreBlockResponse_Status = 3
	ConsensusIgnoreBlockResponse_NOT_READY     ConsensusIgnoreBlockResponse_Status = 4
	ConsensusIgnoreBlockResponse_UNKNOWN_BLOCK ConsensusIgnoreBlockResponse_Status = 5
)

var ConsensusIgnoreBlockResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
	5: "UNKNOWN_BLOCK",
}

var ConsensusIgnoreBlockResponse_Status_value = map[string]int32{
	"STATUS_UNSET":  0,
	"OK":            1,
	"BAD_REQUEST":   2,
	"SERVICE_ERROR": 3,
	"NOT_READY":     4,
	"UNKNOWN_BLOCK": 5,
}

func (x ConsensusIgnoreBlockResponse_Status) String() string {
	return proto.EnumName(ConsensusIgnoreBlockResponse_Status_name, int32(x))
}

func (ConsensusIgnoreBlockResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{32, 0}
}

type ConsensusFailBlockResponse_Status int32

const (
	ConsensusFailBlockResponse_STATUS_UNSET  ConsensusFailBlockResponse_Status = 0
	ConsensusFailBlockResponse_OK            ConsensusFailBlockResponse_Status = 1
	ConsensusFailBlockResponse_BAD_REQUEST   ConsensusFailBlockResponse_Status = 2
	ConsensusFailBlockResponse_SERVICE_ERROR ConsensusFailBlockResponse_Status = 3
	ConsensusFailBlockResponse_NOT_READY     ConsensusFailBlockResponse_Status = 4
	ConsensusFailBlockResponse_UNKNOWN_BLOCK ConsensusFailBlockResponse_Status = 5
)

var ConsensusFailBlockResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
	5: "UNKNOWN_BLOCK",
}

var ConsensusFailBlockResponse_Status_value = map[string]int32{
	"STATUS_UNSET":  0,
	"OK":            1,
	"BAD_REQUEST":   2,
	"SERVICE_ERROR": 3,
	"NOT_READY":     4,
	"UNKNOWN_BLOCK": 5,
}

func (x ConsensusFailBlockResponse_Status) String() string {
	return proto.EnumName(ConsensusFailBlockResponse_Status_name, int32(x))
}

func (ConsensusFailBlockResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{34, 0}
}

type ConsensusBlocksGetResponse_Status int32

const (
	ConsensusBlocksGetResponse_STATUS_UNSET  ConsensusBlocksGetResponse_Status = 0
	ConsensusBlocksGetResponse_OK            ConsensusBlocksGetResponse_Status = 1
	ConsensusBlocksGetResponse_BAD_REQUEST   ConsensusBlocksGetResponse_Status = 2
	ConsensusBlocksGetResponse_SERVICE_ERROR ConsensusBlocksGetResponse_Status = 3
	ConsensusBlocksGetResponse_NOT_READY     ConsensusBlocksGetResponse_Status = 4
	ConsensusBlocksGetResponse_UNKNOWN_BLOCK ConsensusBlocksGetResponse_Status = 5
)

var ConsensusBlocksGetResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
	5: "UNKNOWN_BLOCK",
}

var ConsensusBlocksGetResponse_Status_value = map[string]int32{
	"STATUS_UNSET":  0,
	"OK":            1,
	"BAD_REQUEST":   2,
	"SERVICE_ERROR": 3,
	"NOT_READY":     4,
	"UNKNOWN_BLOCK": 5,
}

func (x ConsensusBlocksGetResponse_Status) String() string {
	return proto.EnumName(ConsensusBlocksGetResponse_Status_name, int32(x))
}

func (ConsensusBlocksGetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{36, 0}
}

type ConsensusChainHeadGetResponse_Status int32

const (
	ConsensusChainHeadGetResponse_STATUS_UNSET  ConsensusChainHeadGetResponse_Status = 0
	ConsensusChainHeadGetResponse_OK            ConsensusChainHeadGetResponse_Status = 1
	ConsensusChainHeadGetResponse_BAD_REQUEST   ConsensusChainHeadGetResponse_Status = 2
	ConsensusChainHeadGetResponse_SERVICE_ERROR ConsensusChainHeadGetResponse_Status = 3
	ConsensusChainHeadGetResponse_NOT_READY     ConsensusChainHeadGetResponse_Status = 4
	ConsensusChainHeadGetResponse_NO_CHAIN_HEAD ConsensusChainHeadGetResponse_Status = 5
)

var ConsensusChainHeadGetResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
	5: "NO_CHAIN_HEAD",
}

var ConsensusChainHeadGetResponse_Status_value = map[string]int32{
	"STATUS_UNSET":  0,
	"OK":            1,
	"BAD_REQUEST":   2,
	"SERVICE_ERROR": 3,
	"NOT_READY":     4,
	"NO_CHAIN_HEAD": 5,
}

func (x ConsensusChainHeadGetResponse_Status) String() string {
	return proto.EnumName(ConsensusChainHeadGetResponse_Status_name, int32(x))
}

func (ConsensusChainHeadGetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{38, 0}
}

type ConsensusSettingsGetResponse_Status int32

const (
	ConsensusSettingsGetResponse_STATUS_UNSET  ConsensusSettingsGetResponse_Status = 0
	ConsensusSettingsGetResponse_OK            ConsensusSettingsGetResponse_Status = 1
	ConsensusSettingsGetResponse_BAD_REQUEST   ConsensusSettingsGetResponse_Status = 2
	ConsensusSettingsGetResponse_SERVICE_ERROR ConsensusSettingsGetResponse_Status = 3
	ConsensusSettingsGetResponse_NOT_READY     ConsensusSettingsGetResponse_Status = 4
	ConsensusSettingsGetResponse_UNKNOWN_BLOCK ConsensusSettingsGetResponse_Status = 5
)

var ConsensusSettingsGetResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
	5: "UNKNOWN_BLOCK",
}

var ConsensusSettingsGetResponse_Status_value = map[string]int32{
	"STATUS_UNSET":  0,
	"OK":            1,
	"BAD_REQUEST":   2,
	"SERVICE_ERROR": 3,
	"NOT_READY":     4,
	"UNKNOWN_BLOCK": 5,
}

func (x ConsensusSettingsGetResponse_Status) String() string {
	return proto.EnumName(ConsensusSettingsGetResponse_Status_name, int32(x))
}

func (ConsensusSettingsGetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{40, 0}
}

type ConsensusStateGetResponse_Status int32

const (
	ConsensusStateGetResponse_STATUS_UNSET  ConsensusStateGetResponse_Status = 0
	ConsensusStateGetResponse_OK            ConsensusStateGetResponse_Status = 1
	ConsensusStateGetResponse_BAD_REQUEST   ConsensusStateGetResponse_Status = 2
	ConsensusStateGetResponse_SERVICE_ERROR ConsensusStateGetResponse_Status = 3
	ConsensusStateGetResponse_NOT_READY     ConsensusStateGetResponse_Status = 4
	ConsensusStateGetResponse_UNKNOWN_BLOCK ConsensusStateGetResponse_Status = 5
)

var ConsensusStateGetResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "BAD_REQUEST",
	3: "SERVICE_ERROR",
	4: "NOT_READY",
	5: "UNKNOWN_BLOCK",
}

var ConsensusStateGetResponse_Status_value = map[string]int32{
	"STATUS_UNSET":  0,
	"OK":            1,
	"BAD_REQUEST":   2,
	"SERVICE_ERROR": 3,
	"NOT_READY":     4,
	"UNKNOWN_BLOCK": 5,
}

func (x ConsensusStateGetResponse_Status) String() string {
	return proto.EnumName(ConsensusStateGetResponse_Status_name, int32(x))
}

func (ConsensusStateGetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{42, 0}
}

// A consensus-related message sent between peers
type ConsensusPeerMessage struct {
	// Interpretation is left to the consensus engine implementation
	MessageType string `protobuf:"bytes,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	// The opaque payload to send to other nodes
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// Used to identify the consensus engine that produced this message
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusPeerMessage) Reset()         { *m = ConsensusPeerMessage{} }
func (m *ConsensusPeerMessage) String() string { return proto.CompactTextString(m) }
func (*ConsensusPeerMessage) ProtoMessage()    {}
func (*ConsensusPeerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{0}
}

func (m *ConsensusPeerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusPeerMessage.Unmarshal(m, b)
}
func (m *ConsensusPeerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusPeerMessage.Marshal(b, m, deterministic)
}
func (m *ConsensusPeerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusPeerMessage.Merge(m, src)
}
func (m *ConsensusPeerMessage) XXX_Size() int {
	return xxx_messageInfo_ConsensusPeerMessage.Size(m)
}
func (m *ConsensusPeerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusPeerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusPeerMessage proto.InternalMessageInfo

func (m *ConsensusPeerMessage) GetMessageType() string {
	if m != nil {
		return m.MessageType
	}
	return ""
}

func (m *ConsensusPeerMessage) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ConsensusPeerMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConsensusPeerMessage) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// All information about a block that is relevant to consensus
type ConsensusBlock struct {
	BlockId    []byte `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	PreviousId []byte `protobuf:"bytes,2,opt,name=previous_id,json=previousId,proto3" json:"previous_id,omitempty"`
	// The id of peer that signed this block
	SignerId []byte `protobuf:"bytes,3,opt,name=signer_id,json=signerId,proto3" json:"signer_id,omitempty"`
	BlockNum uint64 `protobuf:"varint,4,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	Payload  []byte `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	// A summary of the contents of the block
	Summary              []byte   `protobuf:"bytes,6,opt,name=summary,proto3" json:"summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusBlock) Reset()         { *m = ConsensusBlock{} }
func (m *ConsensusBlock) String() string { return proto.CompactTextString(m) }
func (*ConsensusBlock) ProtoMessage()    {}
func (*ConsensusBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{1}
}

func (m *ConsensusBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusBlock.Unmarshal(m, b)
}
func (m *ConsensusBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusBlock.Marshal(b, m, deterministic)
}
func (m *ConsensusBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusBlock.Merge(m, src)
}
func (m *ConsensusBlock) XXX_Size() int {
	return xxx_messageInfo_ConsensusBlock.Size(m)
}
func (m *ConsensusBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusBlock.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusBlock proto.InternalMessageInfo

func (m *ConsensusBlock) GetBlockId() []byte {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *ConsensusBlock) GetPreviousId() []byte {
	if m != nil {
		return m.PreviousId
	}
	return nil
}

func (m *ConsensusBlock) GetSignerId() []byte {
	if m != nil {
		return m.SignerId
	}
	return nil
}

func (m *ConsensusBlock) GetBlockNum() uint64 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

func (m *ConsensusBlock) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *ConsensusBlock) GetSummary() []byte {
	if m != nil {
		return m.Summary
	}
	return nil
}

// Information about a peer that is relevant to consensus
type ConsensusPeerInfo struct {
	// The unique id for this peer. This can be correlated with the signer id
	// on consensus blocks.
	PeerId               []byte   `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusPeerInfo) Reset()         { *m = ConsensusPeerInfo{} }
func (m *ConsensusPeerInfo) String() string { return proto.CompactTextString(m) }
func (*ConsensusPeerInfo) ProtoMessage()    {}
func (*ConsensusPeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{2}
}

func (m *ConsensusPeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusPeerInfo.Unmarshal(m, b)
}
func (m *ConsensusPeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusPeerInfo.Marshal(b, m, deterministic)
}
func (m *ConsensusPeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusPeerInfo.Merge(m, src)
}
func (m *ConsensusPeerInfo) XXX_Size() int {
	return xxx_messageInfo_ConsensusPeerInfo.Size(m)
}
func (m *ConsensusPeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusPeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusPeerInfo proto.InternalMessageInfo

func (m *ConsensusPeerInfo) GetPeerId() []byte {
	if m != nil {
		return m.PeerId
	}
	return nil
}

// A settings key-value pair
type ConsensusSettingsEntry struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusSettingsEntry) Reset()         { *m = ConsensusSettingsEntry{} }
func (m *ConsensusSettingsEntry) String() string { return proto.CompactTextString(m) }
func (*ConsensusSettingsEntry) ProtoMessage()    {}
func (*ConsensusSettingsEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{3}
}

func (m *ConsensusSettingsEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusSettingsEntry.Unmarshal(m, b)
}
func (m *ConsensusSettingsEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusSettingsEntry.Marshal(b, m, deterministic)
}
func (m *ConsensusSettingsEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusSettingsEntry.Merge(m, src)
}
func (m *ConsensusSettingsEntry) XXX_Size() int {
	return xxx_messageInfo_ConsensusSettingsEntry.Size(m)
}
func (m *ConsensusSettingsEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusSettingsEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusSettingsEntry proto.InternalMessageInfo

func (m *ConsensusSettingsEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ConsensusSettingsEntry) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A state key-value pair
type ConsensusStateEntry struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusStateEntry) Reset()         { *m = ConsensusStateEntry{} }
func (m *ConsensusStateEntry) String() string { return proto.CompactTextString(m) }
func (*ConsensusStateEntry) ProtoMessage()    {}
func (*ConsensusStateEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{4}
}

func (m *ConsensusStateEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusStateEntry.Unmarshal(m, b)
}
func (m *ConsensusStateEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusStateEntry.Marshal(b, m, deterministic)
}
func (m *ConsensusStateEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusStateEntry.Merge(m, src)
}
func (m *ConsensusStateEntry) XXX_Size() int {
	return xxx_messageInfo_ConsensusStateEntry.Size(m)
}
func (m *ConsensusStateEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusStateEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusStateEntry proto.InternalMessageInfo

func (m *ConsensusStateEntry) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ConsensusStateEntry) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Sent to connect with the validator
type ConsensusRegisterRequest struct {
	// The name of this consensus engine
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The version of this consensus engine
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusRegisterRequest) Reset()         { *m = ConsensusRegisterRequest{} }
func (m *ConsensusRegisterRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusRegisterRequest) ProtoMessage()    {}
func (*ConsensusRegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{5}
}

func (m *ConsensusRegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusRegisterRequest.Unmarshal(m, b)
}
func (m *ConsensusRegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusRegisterRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusRegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusRegisterRequest.Merge(m, src)
}
func (m *ConsensusRegisterRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusRegisterRequest.Size(m)
}
func (m *ConsensusRegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusRegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusRegisterRequest proto.InternalMessageInfo

func (m *ConsensusRegisterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConsensusRegisterRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type ConsensusRegisterResponse struct {
	Status ConsensusRegisterResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusRegisterResponse_Status" json:"status,omitempty"`
	// Startup Info
	ChainHead            *ConsensusBlock      `protobuf:"bytes,2,opt,name=chain_head,json=chainHead,proto3" json:"chain_head,omitempty"`
	Peers                []*ConsensusPeerInfo `protobuf:"bytes,3,rep,name=peers,proto3" json:"peers,omitempty"`
	LocalPeerInfo        *ConsensusPeerInfo   `protobuf:"bytes,4,opt,name=local_peer_info,json=localPeerInfo,proto3" json:"local_peer_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ConsensusRegisterResponse) Reset()         { *m = ConsensusRegisterResponse{} }
func (m *ConsensusRegisterResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusRegisterResponse) ProtoMessage()    {}
func (*ConsensusRegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{6}
}

func (m *ConsensusRegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusRegisterResponse.Unmarshal(m, b)
}
func (m *ConsensusRegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusRegisterResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusRegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusRegisterResponse.Merge(m, src)
}
func (m *ConsensusRegisterResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusRegisterResponse.Size(m)
}
func (m *ConsensusRegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusRegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusRegisterResponse proto.InternalMessageInfo

func (m *ConsensusRegisterResponse) GetStatus() ConsensusRegisterResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusRegisterResponse_STATUS_UNSET
}

func (m *ConsensusRegisterResponse) GetChainHead() *ConsensusBlock {
	if m != nil {
		return m.ChainHead
	}
	return nil
}

func (m *ConsensusRegisterResponse) GetPeers() []*ConsensusPeerInfo {
	if m != nil {
		return m.Peers
	}
	return nil
}

func (m *ConsensusRegisterResponse) GetLocalPeerInfo() *ConsensusPeerInfo {
	if m != nil {
		return m.LocalPeerInfo
	}
	return nil
}

// A new peer was added
type ConsensusNotifyPeerConnected struct {
	PeerInfo             *ConsensusPeerInfo `protobuf:"bytes,1,opt,name=peer_info,json=peerInfo,proto3" json:"peer_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ConsensusNotifyPeerConnected) Reset()         { *m = ConsensusNotifyPeerConnected{} }
func (m *ConsensusNotifyPeerConnected) String() string { return proto.CompactTextString(m) }
func (*ConsensusNotifyPeerConnected) ProtoMessage()    {}
func (*ConsensusNotifyPeerConnected) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{7}
}

func (m *ConsensusNotifyPeerConnected) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusNotifyPeerConnected.Unmarshal(m, b)
}
func (m *ConsensusNotifyPeerConnected) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusNotifyPeerConnected.Marshal(b, m, deterministic)
}
func (m *ConsensusNotifyPeerConnected) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusNotifyPeerConnected.Merge(m, src)
}
func (m *ConsensusNotifyPeerConnected) XXX_Size() int {
	return xxx_messageInfo_ConsensusNotifyPeerConnected.Size(m)
}
func (m *ConsensusNotifyPeerConnected) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusNotifyPeerConnected.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusNotifyPeerConnected proto.InternalMessageInfo

func (m *ConsensusNotifyPeerConnected) GetPeerInfo() *ConsensusPeerInfo {
	if m != nil {
		return m.PeerInfo
	}
	return nil
}

// An existing peer was dropped
type ConsensusNotifyPeerDisconnected struct {
	PeerId               []byte   `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusNotifyPeerDisconnected) Reset()         { *m = ConsensusNotifyPeerDisconnected{} }
func (m *ConsensusNotifyPeerDisconnected) String() string { return proto.CompactTextString(m) }
func (*ConsensusNotifyPeerDisconnected) ProtoMessage()    {}
func (*ConsensusNotifyPeerDisconnected) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{8}
}

func (m *ConsensusNotifyPeerDisconnected) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusNotifyPeerDisconnected.Unmarshal(m, b)
}
func (m *ConsensusNotifyPeerDisconnected) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusNotifyPeerDisconnected.Marshal(b, m, deterministic)
}
func (m *ConsensusNotifyPeerDisconnected) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusNotifyPeerDisconnected.Merge(m, src)
}
func (m *ConsensusNotifyPeerDisconnected) XXX_Size() int {
	return xxx_messageInfo_ConsensusNotifyPeerDisconnected.Size(m)
}
func (m *ConsensusNotifyPeerDisconnected) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusNotifyPeerDisconnected.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusNotifyPeerDisconnected proto.InternalMessageInfo

func (m *ConsensusNotifyPeerDisconnected) GetPeerId() []byte {
	if m != nil {
		return m.PeerId
	}
	return nil
}

// A new message was received from a peer
type ConsensusNotifyPeerMessage struct {
	Message              *ConsensusPeerMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	SenderId             []byte                `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ConsensusNotifyPeerMessage) Reset()         { *m = ConsensusNotifyPeerMessage{} }
func (m *ConsensusNotifyPeerMessage) String() string { return proto.CompactTextString(m) }
func (*ConsensusNotifyPeerMessage) ProtoMessage()    {}
func (*ConsensusNotifyPeerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{9}
}

func (m *ConsensusNotifyPeerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusNotifyPeerMessage.Unmarshal(m, b)
}
func (m *ConsensusNotifyPeerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusNotifyPeerMessage.Marshal(b, m, deterministic)
}
func (m *ConsensusNotifyPeerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusNotifyPeerMessage.Merge(m, src)
}
func (m *ConsensusNotifyPeerMessage) XXX_Size() int {
	return xxx_messageInfo_ConsensusNotifyPeerMessage.Size(m)
}
func (m *ConsensusNotifyPeerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusNotifyPeerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusNotifyPeerMessage proto.InternalMessageInfo

func (m *ConsensusNotifyPeerMessage) GetMessage() *ConsensusPeerMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ConsensusNotifyPeerMessage) GetSenderId() []byte {
	if m != nil {
		return m.SenderId
	}
	return nil
}

// A new block was received and passed initial consensus validation
type ConsensusNotifyBlockNew struct {
	Block                *ConsensusBlock `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ConsensusNotifyBlockNew) Reset()         { *m = ConsensusNotifyBlockNew{} }
func (m *ConsensusNotifyBlockNew) String() string { return proto.CompactTextString(m) }
func (*ConsensusNotifyBlockNew) ProtoMessage()    {}
func (*ConsensusNotifyBlockNew) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{10}
}

func (m *ConsensusNotifyBlockNew) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusNotifyBlockNew.Unmarshal(m, b)
}
func (m *ConsensusNotifyBlockNew) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusNotifyBlockNew.Marshal(b, m, deterministic)
}
func (m *ConsensusNotifyBlockNew) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusNotifyBlockNew.Merge(m, src)
}
func (m *ConsensusNotifyBlockNew) XXX_Size() int {
	return xxx_messageInfo_ConsensusNotifyBlockNew.Size(m)
}
func (m *ConsensusNotifyBlockNew) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusNotifyBlockNew.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusNotifyBlockNew proto.InternalMessageInfo

func (m *ConsensusNotifyBlockNew) GetBlock() *ConsensusBlock {
	if m != nil {
		return m.Block
	}
	return nil
}

// This block can be committed successfully
type ConsensusNotifyBlockValid struct {
	BlockId              []byte   `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusNotifyBlockValid) Reset()         { *m = ConsensusNotifyBlockValid{} }
func (m *ConsensusNotifyBlockValid) String() string { return proto.CompactTextString(m) }
func (*ConsensusNotifyBlockValid) ProtoMessage()    {}
func (*ConsensusNotifyBlockValid) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{11}
}

func (m *ConsensusNotifyBlockValid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusNotifyBlockValid.Unmarshal(m, b)
}
func (m *ConsensusNotifyBlockValid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusNotifyBlockValid.Marshal(b, m, deterministic)
}
func (m *ConsensusNotifyBlockValid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusNotifyBlockValid.Merge(m, src)
}
func (m *ConsensusNotifyBlockValid) XXX_Size() int {
	return xxx_messageInfo_ConsensusNotifyBlockValid.Size(m)
}
func (m *ConsensusNotifyBlockValid) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusNotifyBlockValid.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusNotifyBlockValid proto.InternalMessageInfo

func (m *ConsensusNotifyBlockValid) GetBlockId() []byte {
	if m != nil {
		return m.BlockId
	}
	return nil
}

// This block cannot be committed successfully
type ConsensusNotifyBlockInvalid struct {
	BlockId              []byte   `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusNotifyBlockInvalid) Reset()         { *m = ConsensusNotifyBlockInvalid{} }
func (m *ConsensusNotifyBlockInvalid) String() string { return proto.CompactTextString(m) }
func (*ConsensusNotifyBlockInvalid) ProtoMessage()    {}
func (*ConsensusNotifyBlockInvalid) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{12}
}

func (m *ConsensusNotifyBlockInvalid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusNotifyBlockInvalid.Unmarshal(m, b)
}
func (m *ConsensusNotifyBlockInvalid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusNotifyBlockInvalid.Marshal(b, m, deterministic)
}
func (m *ConsensusNotifyBlockInvalid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusNotifyBlockInvalid.Merge(m, src)
}
func (m *ConsensusNotifyBlockInvalid) XXX_Size() int {
	return xxx_messageInfo_ConsensusNotifyBlockInvalid.Size(m)
}
func (m *ConsensusNotifyBlockInvalid) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusNotifyBlockInvalid.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusNotifyBlockInvalid proto.InternalMessageInfo

func (m *ConsensusNotifyBlockInvalid) GetBlockId() []byte {
	if m != nil {
		return m.BlockId
	}
	return nil
}

// This block has been committed
type ConsensusNotifyBlockCommit struct {
	BlockId              []byte   `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusNotifyBlockCommit) Reset()         { *m = ConsensusNotifyBlockCommit{} }
func (m *ConsensusNotifyBlockCommit) String() string { return proto.CompactTextString(m) }
func (*ConsensusNotifyBlockCommit) ProtoMessage()    {}
func (*ConsensusNotifyBlockCommit) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{13}
}

func (m *ConsensusNotifyBlockCommit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusNotifyBlockCommit.Unmarshal(m, b)
}
func (m *ConsensusNotifyBlockCommit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusNotifyBlockCommit.Marshal(b, m, deterministic)
}
func (m *ConsensusNotifyBlockCommit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusNotifyBlockCommit.Merge(m, src)
}
func (m *ConsensusNotifyBlockCommit) XXX_Size() int {
	return xxx_messageInfo_ConsensusNotifyBlockCommit.Size(m)
}
func (m *ConsensusNotifyBlockCommit) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusNotifyBlockCommit.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusNotifyBlockCommit proto.InternalMessageInfo

func (m *ConsensusNotifyBlockCommit) GetBlockId() []byte {
	if m != nil {
		return m.BlockId
	}
	return nil
}

// Confirm that the notification was received. The validator message
// correlation id is used to determine which notification this is an ack for.
type ConsensusNotifyAck struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusNotifyAck) Reset()         { *m = ConsensusNotifyAck{} }
func (m *ConsensusNotifyAck) String() string { return proto.CompactTextString(m) }
func (*ConsensusNotifyAck) ProtoMessage()    {}
func (*ConsensusNotifyAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{14}
}

func (m *ConsensusNotifyAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusNotifyAck.Unmarshal(m, b)
}
func (m *ConsensusNotifyAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusNotifyAck.Marshal(b, m, deterministic)
}
func (m *ConsensusNotifyAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusNotifyAck.Merge(m, src)
}
func (m *ConsensusNotifyAck) XXX_Size() int {
	return xxx_messageInfo_ConsensusNotifyAck.Size(m)
}
func (m *ConsensusNotifyAck) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusNotifyAck.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusNotifyAck proto.InternalMessageInfo

// Send a consensus message to a specific, connected peer
type ConsensusSendToRequest struct {
	Message              *ConsensusPeerMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	PeerId               []byte                `protobuf:"bytes,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ConsensusSendToRequest) Reset()         { *m = ConsensusSendToRequest{} }
func (m *ConsensusSendToRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusSendToRequest) ProtoMessage()    {}
func (*ConsensusSendToRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{15}
}

func (m *ConsensusSendToRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusSendToRequest.Unmarshal(m, b)
}
func (m *ConsensusSendToRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusSendToRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusSendToRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusSendToRequest.Merge(m, src)
}
func (m *ConsensusSendToRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusSendToRequest.Size(m)
}
func (m *ConsensusSendToRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusSendToRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusSendToRequest proto.InternalMessageInfo

func (m *ConsensusSendToRequest) GetMessage() *ConsensusPeerMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ConsensusSendToRequest) GetPeerId() []byte {
	if m != nil {
		return m.PeerId
	}
	return nil
}

type ConsensusSendToResponse struct {
	Status               ConsensusSendToResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusSendToResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ConsensusSendToResponse) Reset()         { *m = ConsensusSendToResponse{} }
func (m *ConsensusSendToResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusSendToResponse) ProtoMessage()    {}
func (*ConsensusSendToResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{16}
}

func (m *ConsensusSendToResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusSendToResponse.Unmarshal(m, b)
}
func (m *ConsensusSendToResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusSendToResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusSendToResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusSendToResponse.Merge(m, src)
}
func (m *ConsensusSendToResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusSendToResponse.Size(m)
}
func (m *ConsensusSendToResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusSendToResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusSendToResponse proto.InternalMessageInfo

func (m *ConsensusSendToResponse) GetStatus() ConsensusSendToResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusSendToResponse_STATUS_UNSET
}

// Broadcast a consensus message to all peers
type ConsensusBroadcastRequest struct {
	Message              *ConsensusPeerMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ConsensusBroadcastRequest) Reset()         { *m = ConsensusBroadcastRequest{} }
func (m *ConsensusBroadcastRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusBroadcastRequest) ProtoMessage()    {}
func (*ConsensusBroadcastRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{17}
}

func (m *ConsensusBroadcastRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusBroadcastRequest.Unmarshal(m, b)
}
func (m *ConsensusBroadcastRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusBroadcastRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusBroadcastRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusBroadcastRequest.Merge(m, src)
}
func (m *ConsensusBroadcastRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusBroadcastRequest.Size(m)
}
func (m *ConsensusBroadcastRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusBroadcastRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusBroadcastRequest proto.InternalMessageInfo

func (m *ConsensusBroadcastRequest) GetMessage() *ConsensusPeerMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type ConsensusBroadcastResponse struct {
	Status               ConsensusBroadcastResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusBroadcastResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ConsensusBroadcastResponse) Reset()         { *m = ConsensusBroadcastResponse{} }
func (m *ConsensusBroadcastResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusBroadcastResponse) ProtoMessage()    {}
func (*ConsensusBroadcastResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{18}
}

func (m *ConsensusBroadcastResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusBroadcastResponse.Unmarshal(m, b)
}
func (m *ConsensusBroadcastResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusBroadcastResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusBroadcastResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusBroadcastResponse.Merge(m, src)
}
func (m *ConsensusBroadcastResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusBroadcastResponse.Size(m)
}
func (m *ConsensusBroadcastResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusBroadcastResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusBroadcastResponse proto.InternalMessageInfo

func (m *ConsensusBroadcastResponse) GetStatus() ConsensusBroadcastResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusBroadcastResponse_STATUS_UNSET
}

// Initialize a new block built on the block with the given previous id and
// begin adding batches to it. If no previous id is specified, the current
// head will be used.
type ConsensusInitializeBlockRequest struct {
	PreviousId           []byte   `protobuf:"bytes,1,opt,name=previous_id,json=previousId,proto3" json:"previous_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusInitializeBlockRequest) Reset()         { *m = ConsensusInitializeBlockRequest{} }
func (m *ConsensusInitializeBlockRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusInitializeBlockRequest) ProtoMessage()    {}
func (*ConsensusInitializeBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{19}
}

func (m *ConsensusInitializeBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusInitializeBlockRequest.Unmarshal(m, b)
}
func (m *ConsensusInitializeBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusInitializeBlockRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusInitializeBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusInitializeBlockRequest.Merge(m, src)
}
func (m *ConsensusInitializeBlockRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusInitializeBlockRequest.Size(m)
}
func (m *ConsensusInitializeBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusInitializeBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusInitializeBlockRequest proto.InternalMessageInfo

func (m *ConsensusInitializeBlockRequest) GetPreviousId() []byte {
	if m != nil {
		return m.PreviousId
	}
	return nil
}

type ConsensusInitializeBlockResponse struct {
	Status               ConsensusInitializeBlockResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusInitializeBlockResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *ConsensusInitializeBlockResponse) Reset()         { *m = ConsensusInitializeBlockResponse{} }
func (m *ConsensusInitializeBlockResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusInitializeBlockResponse) ProtoMessage()    {}
func (*ConsensusInitializeBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{20}
}

func (m *ConsensusInitializeBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusInitializeBlockResponse.Unmarshal(m, b)
}
func (m *ConsensusInitializeBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusInitializeBlockResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusInitializeBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusInitializeBlockResponse.Merge(m, src)
}
func (m *ConsensusInitializeBlockResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusInitializeBlockResponse.Size(m)
}
func (m *ConsensusInitializeBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusInitializeBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusInitializeBlockResponse proto.InternalMessageInfo

func (m *ConsensusInitializeBlockResponse) GetStatus() ConsensusInitializeBlockResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusInitializeBlockResponse_STATUS_UNSET
}

// Stop adding batches to the current block and return a summary of its
// contents.
type ConsensusSummarizeBlockRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusSummarizeBlockRequest) Reset()         { *m = ConsensusSummarizeBlockRequest{} }
func (m *ConsensusSummarizeBlockRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusSummarizeBlockRequest) ProtoMessage()    {}
func (*ConsensusSummarizeBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{21}
}

func (m *ConsensusSummarizeBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusSummarizeBlockRequest.Unmarshal(m, b)
}
func (m *ConsensusSummarizeBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusSummarizeBlockRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusSummarizeBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusSummarizeBlockRequest.Merge(m, src)
}
func (m *ConsensusSummarizeBlockRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusSummarizeBlockRequest.Size(m)
}
func (m *ConsensusSummarizeBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusSummarizeBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusSummarizeBlockRequest proto.InternalMessageInfo

type ConsensusSummarizeBlockResponse struct {
	Status ConsensusSummarizeBlockResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusSummarizeBlockResponse_Status" json:"status,omitempty"`
	// A summary of the block contents
	Summary              []byte   `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusSummarizeBlockResponse) Reset()         { *m = ConsensusSummarizeBlockResponse{} }
func (m *ConsensusSummarizeBlockResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusSummarizeBlockResponse) ProtoMessage()    {}
func (*ConsensusSummarizeBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{22}
}

func (m *ConsensusSummarizeBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusSummarizeBlockResponse.Unmarshal(m, b)
}
func (m *ConsensusSummarizeBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusSummarizeBlockResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusSummarizeBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusSummarizeBlockResponse.Merge(m, src)
}
func (m *ConsensusSummarizeBlockResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusSummarizeBlockResponse.Size(m)
}
func (m *ConsensusSummarizeBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusSummarizeBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusSummarizeBlockResponse proto.InternalMessageInfo

func (m *ConsensusSummarizeBlockResponse) GetStatus() ConsensusSummarizeBlockResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusSummarizeBlockResponse_STATUS_UNSET
}

func (m *ConsensusSummarizeBlockResponse) GetSummary() []byte {
	if m != nil {
		return m.Summary
	}
	return nil
}

// Insert the given consensus data into the block and sign it. If this call is
// successful, the consensus engine will receive the block afterwards.
type ConsensusFinalizeBlockRequest struct {
	// The consensus data to include in the finalized block
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusFinalizeBlockRequest) Reset()         { *m = ConsensusFinalizeBlockRequest{} }
func (m *ConsensusFinalizeBlockRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusFinalizeBlockRequest) ProtoMessage()    {}
func (*ConsensusFinalizeBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{23}
}

func (m *ConsensusFinalizeBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusFinalizeBlockRequest.Unmarshal(m, b)
}
func (m *ConsensusFinalizeBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusFinalizeBlockRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusFinalizeBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusFinalizeBlockRequest.Merge(m, src)
}
func (m *ConsensusFinalizeBlockRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusFinalizeBlockRequest.Size(m)
}
func (m *ConsensusFinalizeBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusFinalizeBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusFinalizeBlockRequest proto.InternalMessageInfo

func (m *ConsensusFinalizeBlockRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ConsensusFinalizeBlockResponse struct {
	Status ConsensusFinalizeBlockResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusFinalizeBlockResponse_Status" json:"status,omitempty"`
	// The block id of the newly created block
	BlockId              []byte   `protobuf:"bytes,2,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusFinalizeBlockResponse) Reset()         { *m = ConsensusFinalizeBlockResponse{} }
func (m *ConsensusFinalizeBlockResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusFinalizeBlockResponse) ProtoMessage()    {}
func (*ConsensusFinalizeBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{24}
}

func (m *ConsensusFinalizeBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusFinalizeBlockResponse.Unmarshal(m, b)
}
func (m *ConsensusFinalizeBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusFinalizeBlockResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusFinalizeBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusFinalizeBlockResponse.Merge(m, src)
}
func (m *ConsensusFinalizeBlockResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusFinalizeBlockResponse.Size(m)
}
func (m *ConsensusFinalizeBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusFinalizeBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusFinalizeBlockResponse proto.InternalMessageInfo

func (m *ConsensusFinalizeBlockResponse) GetStatus() ConsensusFinalizeBlockResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusFinalizeBlockResponse_STATUS_UNSET
}

func (m *ConsensusFinalizeBlockResponse) GetBlockId() []byte {
	if m != nil {
		return m.BlockId
	}
	return nil
}

// Stop adding batches to the current block and abandon it.
type ConsensusCancelBlockRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusCancelBlockRequest) Reset()         { *m = ConsensusCancelBlockRequest{} }
func (m *ConsensusCancelBlockRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusCancelBlockRequest) ProtoMessage()    {}
func (*ConsensusCancelBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{25}
}

func (m *ConsensusCancelBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusCancelBlockRequest.Unmarshal(m, b)
}
func (m *ConsensusCancelBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusCancelBlockRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusCancelBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusCancelBlockRequest.Merge(m, src)
}
func (m *ConsensusCancelBlockRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusCancelBlockRequest.Size(m)
}
func (m *ConsensusCancelBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusCancelBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusCancelBlockRequest proto.InternalMessageInfo

type ConsensusCancelBlockResponse struct {
	Status               ConsensusCancelBlockResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusCancelBlockResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ConsensusCancelBlockResponse) Reset()         { *m = ConsensusCancelBlockResponse{} }
func (m *ConsensusCancelBlockResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusCancelBlockResponse) ProtoMessage()    {}
func (*ConsensusCancelBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{26}
}

func (m *ConsensusCancelBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusCancelBlockResponse.Unmarshal(m, b)
}
func (m *ConsensusCancelBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusCancelBlockResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusCancelBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusCancelBlockResponse.Merge(m, src)
}
func (m *ConsensusCancelBlockResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusCancelBlockResponse.Size(m)
}
func (m *ConsensusCancelBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusCancelBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusCancelBlockResponse proto.InternalMessageInfo

func (m *ConsensusCancelBlockResponse) GetStatus() ConsensusCancelBlockResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusCancelBlockResponse_STATUS_UNSET
}

// Request that, for each block block in order, the block is checked to
// determine whether the block can be committed successfully or not. Blocks
// may be checked in parallel. If a new request arrives, it overrides the
// previous request allowing the engine to reprioritize the list of blocks to
// check.
//
// NOTE: OK does not mean the blocks will all commit successfully, only that
// the directive was received successfully. The engine must listen for
// notifications from the consuming component to learn if the blocks would
// commit or not.
type ConsensusCheckBlocksRequest struct {
	BlockIds             [][]byte `protobuf:"bytes,1,rep,name=block_ids,json=blockIds,proto3" json:"block_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusCheckBlocksRequest) Reset()         { *m = ConsensusCheckBlocksRequest{} }
func (m *ConsensusCheckBlocksRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusCheckBlocksRequest) ProtoMessage()    {}
func (*ConsensusCheckBlocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{27}
}

func (m *ConsensusCheckBlocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusCheckBlocksRequest.Unmarshal(m, b)
}
func (m *ConsensusCheckBlocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusCheckBlocksRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusCheckBlocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusCheckBlocksRequest.Merge(m, src)
}
func (m *ConsensusCheckBlocksRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusCheckBlocksRequest.Size(m)
}
func (m *ConsensusCheckBlocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusCheckBlocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusCheckBlocksRequest proto.InternalMessageInfo

func (m *ConsensusCheckBlocksRequest) GetBlockIds() [][]byte {
	if m != nil {
		return m.BlockIds
	}
	return nil
}

type ConsensusCheckBlocksResponse struct {
	Status               ConsensusCheckBlocksResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusCheckBlocksResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ConsensusCheckBlocksResponse) Reset()         { *m = ConsensusCheckBlocksResponse{} }
func (m *ConsensusCheckBlocksResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusCheckBlocksResponse) ProtoMessage()    {}
func (*ConsensusCheckBlocksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{28}
}

func (m *ConsensusCheckBlocksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusCheckBlocksResponse.Unmarshal(m, b)
}
func (m *ConsensusCheckBlocksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusCheckBlocksResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusCheckBlocksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusCheckBlocksResponse.Merge(m, src)
}
func (m *ConsensusCheckBlocksResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusCheckBlocksResponse.Size(m)
}
func (m *ConsensusCheckBlocksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusCheckBlocksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusCheckBlocksResponse proto.InternalMessageInfo

func (m *ConsensusCheckBlocksResponse) GetStatus() ConsensusCheckBlocksResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusCheckBlocksResponse_STATUS_UNSET
}

// Request that the block be committed. This request fails if the block has
// not already been checked.
//
// NOTE: OK does not mean the block has been committed, only that the directive
// was received successfully. The engine must listen for notifications from the
// consuming component to learn when the block commits.
type ConsensusCommitBlockRequest struct {
	BlockId              []byte   `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusCommitBlockRequest) Reset()         { *m = ConsensusCommitBlockRequest{} }
func (m *ConsensusCommitBlockRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusCommitBlockRequest) ProtoMessage()    {}
func (*ConsensusCommitBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{29}
}

func (m *ConsensusCommitBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusCommitBlockRequest.Unmarshal(m, b)
}
func (m *ConsensusCommitBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusCommitBlockRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusCommitBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusCommitBlockRequest.Merge(m, src)
}
func (m *ConsensusCommitBlockRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusCommitBlockRequest.Size(m)
}
func (m *ConsensusCommitBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusCommitBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusCommitBlockRequest proto.InternalMessageInfo

func (m *ConsensusCommitBlockRequest) GetBlockId() []byte {
	if m != nil {
		return m.BlockId
	}
	return nil
}

type ConsensusCommitBlockResponse struct {
	Status               ConsensusCommitBlockResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusCommitBlockResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ConsensusCommitBlockResponse) Reset()         { *m = ConsensusCommitBlockResponse{} }
func (m *ConsensusCommitBlockResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusCommitBlockResponse) ProtoMessage()    {}
func (*ConsensusCommitBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{30}
}

func (m *ConsensusCommitBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusCommitBlockResponse.Unmarshal(m, b)
}
func (m *ConsensusCommitBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusCommitBlockResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusCommitBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusCommitBlockResponse.Merge(m, src)
}
func (m *ConsensusCommitBlockResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusCommitBlockResponse.Size(m)
}
func (m *ConsensusCommitBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusCommitBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusCommitBlockResponse proto.InternalMessageInfo

func (m *ConsensusCommitBlockResponse) GetStatus() ConsensusCommitBlockResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusCommitBlockResponse_STATUS_UNSET
}

// Inform the consuming component that this block is no longer being considered
// and can be held or freed as needed.
type ConsensusIgnoreBlockRequest struct {
	BlockId              []byte   `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusIgnoreBlockRequest) Reset()         { *m = ConsensusIgnoreBlockRequest{} }
func (m *ConsensusIgnoreBlockRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusIgnoreBlockRequest) ProtoMessage()    {}
func (*ConsensusIgnoreBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{31}
}

func (m *ConsensusIgnoreBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusIgnoreBlockRequest.Unmarshal(m, b)
}
func (m *ConsensusIgnoreBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusIgnoreBlockRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusIgnoreBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusIgnoreBlockRequest.Merge(m, src)
}
func (m *ConsensusIgnoreBlockRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusIgnoreBlockRequest.Size(m)
}
func (m *ConsensusIgnoreBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusIgnoreBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusIgnoreBlockRequest proto.InternalMessageInfo

func (m *ConsensusIgnoreBlockRequest) GetBlockId() []byte {
	if m != nil {
		return m.BlockId
	}
	return nil
}

type ConsensusIgnoreBlockResponse struct {
	Status               ConsensusIgnoreBlockResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusIgnoreBlockResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ConsensusIgnoreBlockResponse) Reset()         { *m = ConsensusIgnoreBlockResponse{} }
func (m *ConsensusIgnoreBlockResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusIgnoreBlockResponse) ProtoMessage()    {}
func (*ConsensusIgnoreBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{32}
}

func (m *ConsensusIgnoreBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusIgnoreBlockResponse.Unmarshal(m, b)
}
func (m *ConsensusIgnoreBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusIgnoreBlockResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusIgnoreBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusIgnoreBlockResponse.Merge(m, src)
}
func (m *ConsensusIgnoreBlockResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusIgnoreBlockResponse.Size(m)
}
func (m *ConsensusIgnoreBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusIgnoreBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusIgnoreBlockResponse proto.InternalMessageInfo

func (m *ConsensusIgnoreBlockResponse) GetStatus() ConsensusIgnoreBlockResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusIgnoreBlockResponse_STATUS_UNSET
}

// Fail this block and any of its descendants and purge them as needed.
type ConsensusFailBlockRequest struct {
	BlockId              []byte   `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusFailBlockRequest) Reset()         { *m = ConsensusFailBlockRequest{} }
func (m *ConsensusFailBlockRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusFailBlockRequest) ProtoMessage()    {}
func (*ConsensusFailBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{33}
}

func (m *ConsensusFailBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusFailBlockRequest.Unmarshal(m, b)
}
func (m *ConsensusFailBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusFailBlockRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusFailBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusFailBlockRequest.Merge(m, src)
}
func (m *ConsensusFailBlockRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusFailBlockRequest.Size(m)
}
func (m *ConsensusFailBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusFailBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusFailBlockRequest proto.InternalMessageInfo

func (m *ConsensusFailBlockRequest) GetBlockId() []byte {
	if m != nil {
		return m.BlockId
	}
	return nil
}

type ConsensusFailBlockResponse struct {
	Status               ConsensusFailBlockResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusFailBlockResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ConsensusFailBlockResponse) Reset()         { *m = ConsensusFailBlockResponse{} }
func (m *ConsensusFailBlockResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusFailBlockResponse) ProtoMessage()    {}
func (*ConsensusFailBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{34}
}

func (m *ConsensusFailBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusFailBlockResponse.Unmarshal(m, b)
}
func (m *ConsensusFailBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusFailBlockResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusFailBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusFailBlockResponse.Merge(m, src)
}
func (m *ConsensusFailBlockResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusFailBlockResponse.Size(m)
}
func (m *ConsensusFailBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusFailBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusFailBlockResponse proto.InternalMessageInfo

func (m *ConsensusFailBlockResponse) GetStatus() ConsensusFailBlockResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusFailBlockResponse_STATUS_UNSET
}

// Retrieve consensus-related information about blocks. If some blocks could
// not be found, only the blocks that could be found will be returned.
type ConsensusBlocksGetRequest struct {
	BlockIds             [][]byte `protobuf:"bytes,1,rep,name=block_ids,json=blockIds,proto3" json:"block_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusBlocksGetRequest) Reset()         { *m = ConsensusBlocksGetRequest{} }
func (m *ConsensusBlocksGetRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusBlocksGetRequest) ProtoMessage()    {}
func (*ConsensusBlocksGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{35}
}

func (m *ConsensusBlocksGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusBlocksGetRequest.Unmarshal(m, b)
}
func (m *ConsensusBlocksGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusBlocksGetRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusBlocksGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusBlocksGetRequest.Merge(m, src)
}
func (m *ConsensusBlocksGetRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusBlocksGetRequest.Size(m)
}
func (m *ConsensusBlocksGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusBlocksGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusBlocksGetRequest proto.InternalMessageInfo

func (m *ConsensusBlocksGetRequest) GetBlockIds() [][]byte {
	if m != nil {
		return m.BlockIds
	}
	return nil
}

type ConsensusBlocksGetResponse struct {
	Status               ConsensusBlocksGetResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusBlocksGetResponse_Status" json:"status,omitempty"`
	Blocks               []*ConsensusBlock                 `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ConsensusBlocksGetResponse) Reset()         { *m = ConsensusBlocksGetResponse{} }
func (m *ConsensusBlocksGetResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusBlocksGetResponse) ProtoMessage()    {}
func (*ConsensusBlocksGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{36}
}

func (m *ConsensusBlocksGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusBlocksGetResponse.Unmarshal(m, b)
}
func (m *ConsensusBlocksGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusBlocksGetResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusBlocksGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusBlocksGetResponse.Merge(m, src)
}
func (m *ConsensusBlocksGetResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusBlocksGetResponse.Size(m)
}
func (m *ConsensusBlocksGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusBlocksGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusBlocksGetResponse proto.InternalMessageInfo

func (m *ConsensusBlocksGetResponse) GetStatus() ConsensusBlocksGetResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusBlocksGetResponse_STATUS_UNSET
}

func (m *ConsensusBlocksGetResponse) GetBlocks() []*ConsensusBlock {
	if m != nil {
		return m.Blocks
	}
	return nil
}

// Retrieve consensus-related information about the chain head.
type ConsensusChainHeadGetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusChainHeadGetRequest) Reset()         { *m = ConsensusChainHeadGetRequest{} }
func (m *ConsensusChainHeadGetRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusChainHeadGetRequest) ProtoMessage()    {}
func (*ConsensusChainHeadGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{37}
}

func (m *ConsensusChainHeadGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusChainHeadGetRequest.Unmarshal(m, b)
}
func (m *ConsensusChainHeadGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusChainHeadGetRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusChainHeadGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusChainHeadGetRequest.Merge(m, src)
}
func (m *ConsensusChainHeadGetRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusChainHeadGetRequest.Size(m)
}
func (m *ConsensusChainHeadGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusChainHeadGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusChainHeadGetRequest proto.InternalMessageInfo

type ConsensusChainHeadGetResponse struct {
	Status               ConsensusChainHeadGetResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusChainHeadGetResponse_Status" json:"status,omitempty"`
	Block                *ConsensusBlock                      `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ConsensusChainHeadGetResponse) Reset()         { *m = ConsensusChainHeadGetResponse{} }
func (m *ConsensusChainHeadGetResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusChainHeadGetResponse) ProtoMessage()    {}
func (*ConsensusChainHeadGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{38}
}

func (m *ConsensusChainHeadGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusChainHeadGetResponse.Unmarshal(m, b)
}
func (m *ConsensusChainHeadGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusChainHeadGetResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusChainHeadGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusChainHeadGetResponse.Merge(m, src)
}
func (m *ConsensusChainHeadGetResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusChainHeadGetResponse.Size(m)
}
func (m *ConsensusChainHeadGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusChainHeadGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusChainHeadGetResponse proto.InternalMessageInfo

func (m *ConsensusChainHeadGetResponse) GetStatus() ConsensusChainHeadGetResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusChainHeadGetResponse_STATUS_UNSET
}

func (m *ConsensusChainHeadGetResponse) GetBlock() *ConsensusBlock {
	if m != nil {
		return m.Block
	}
	return nil
}

// Read the values of these settings from state as of the given block. If some
// values settings keys cannot be found, the keys that were found will be
// returned.
type ConsensusSettingsGetRequest struct {
	BlockId              []byte   `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Keys                 []string `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusSettingsGetRequest) Reset()         { *m = ConsensusSettingsGetRequest{} }
func (m *ConsensusSettingsGetRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusSettingsGetRequest) ProtoMessage()    {}
func (*ConsensusSettingsGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{39}
}

func (m *ConsensusSettingsGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusSettingsGetRequest.Unmarshal(m, b)
}
func (m *ConsensusSettingsGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusSettingsGetRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusSettingsGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusSettingsGetRequest.Merge(m, src)
}
func (m *ConsensusSettingsGetRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusSettingsGetRequest.Size(m)
}
func (m *ConsensusSettingsGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusSettingsGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusSettingsGetRequest proto.InternalMessageInfo

func (m *ConsensusSettingsGetRequest) GetBlockId() []byte {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *ConsensusSettingsGetRequest) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type ConsensusSettingsGetResponse struct {
	Status               ConsensusSettingsGetResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusSettingsGetResponse_Status" json:"status,omitempty"`
	Entries              []*ConsensusSettingsEntry           `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ConsensusSettingsGetResponse) Reset()         { *m = ConsensusSettingsGetResponse{} }
func (m *ConsensusSettingsGetResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusSettingsGetResponse) ProtoMessage()    {}
func (*ConsensusSettingsGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{40}
}

func (m *ConsensusSettingsGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusSettingsGetResponse.Unmarshal(m, b)
}
func (m *ConsensusSettingsGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusSettingsGetResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusSettingsGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusSettingsGetResponse.Merge(m, src)
}
func (m *ConsensusSettingsGetResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusSettingsGetResponse.Size(m)
}
func (m *ConsensusSettingsGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusSettingsGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusSettingsGetResponse proto.InternalMessageInfo

func (m *ConsensusSettingsGetResponse) GetStatus() ConsensusSettingsGetResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusSettingsGetResponse_STATUS_UNSET
}

func (m *ConsensusSettingsGetResponse) GetEntries() []*ConsensusSettingsEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

// Read the data at these addresses from state as of the given block. If some
// addresses cannot be found, state at the addresses that were found will be
// returned.
type ConsensusStateGetRequest struct {
	BlockId              []byte   `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Addresses            []string `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusStateGetRequest) Reset()         { *m = ConsensusStateGetRequest{} }
func (m *ConsensusStateGetRequest) String() string { return proto.CompactTextString(m) }
func (*ConsensusStateGetRequest) ProtoMessage()    {}
func (*ConsensusStateGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{41}
}

func (m *ConsensusStateGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusStateGetRequest.Unmarshal(m, b)
}
func (m *ConsensusStateGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusStateGetRequest.Marshal(b, m, deterministic)
}
func (m *ConsensusStateGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusStateGetRequest.Merge(m, src)
}
func (m *ConsensusStateGetRequest) XXX_Size() int {
	return xxx_messageInfo_ConsensusStateGetRequest.Size(m)
}
func (m *ConsensusStateGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusStateGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusStateGetRequest proto.InternalMessageInfo

func (m *ConsensusStateGetRequest) GetBlockId() []byte {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *ConsensusStateGetRequest) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type ConsensusStateGetResponse struct {
	Status               ConsensusStateGetResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ConsensusStateGetResponse_Status" json:"status,omitempty"`
	Entries              []*ConsensusStateEntry           `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ConsensusStateGetResponse) Reset()         { *m = ConsensusStateGetResponse{} }
func (m *ConsensusStateGetResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusStateGetResponse) ProtoMessage()    {}
func (*ConsensusStateGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7715b66d111f5997, []int{42}
}

func (m *ConsensusStateGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusStateGetResponse.Unmarshal(m, b)
}
func (m *ConsensusStateGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusStateGetResponse.Marshal(b, m, deterministic)
}
func (m *ConsensusStateGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusStateGetResponse.Merge(m, src)
}
func (m *ConsensusStateGetResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusStateGetResponse.Size(m)
}
func (m *ConsensusStateGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusStateGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusStateGetResponse proto.InternalMessageInfo

func (m *ConsensusStateGetResponse) GetStatus() ConsensusStateGetResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConsensusStateGetResponse_STATUS_UNSET
}

func (m *ConsensusStateGetResponse) GetEntries() []*ConsensusStateEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterEnum("ConsensusRegisterResponse_Status", ConsensusRegisterResponse_Status_name, ConsensusRegisterResponse_Status_value)
	proto.RegisterEnum("ConsensusSendToResponse_Status", ConsensusSendToResponse_Status_name, ConsensusSendToResponse_Status_value)
	proto.RegisterEnum("ConsensusBroadcastResponse_Status", ConsensusBroadcastResponse_Status_name, ConsensusBroadcastResponse_Status_value)
	proto.RegisterEnum("ConsensusInitializeBlockResponse_Status", ConsensusInitializeBlockResponse_Status_name, ConsensusInitializeBlockResponse_Status_value)
	proto.RegisterEnum("ConsensusSummarizeBlockResponse_Status", ConsensusSummarizeBlockResponse_Status_name, ConsensusSummarizeBlockResponse_Status_value)
	proto.RegisterEnum("ConsensusFinalizeBlockResponse_Status", ConsensusFinalizeBlockResponse_Status_name, ConsensusFinalizeBlockResponse_Status_value)
	proto.RegisterEnum("ConsensusCancelBlockResponse_Status", ConsensusCancelBlockResponse_Status_name, ConsensusCancelBlockResponse_Status_value)
	proto.RegisterEnum("ConsensusCheckBlocksResponse_Status", ConsensusCheckBlocksResponse_Status_name, ConsensusCheckBlocksResponse_Status_value)
	proto.RegisterEnum("ConsensusCommitBlockResponse_Status", ConsensusCommitBlockResponse_Status_name, ConsensusCommitBlockResponse_Status_value)
	proto.RegisterEnum("ConsensusIgnoreBlockResponse_Status", ConsensusIgnoreBlockResponse_Status_name, ConsensusIgnoreBlockResponse_Status_value)
	proto.RegisterEnum("ConsensusFailBlockResponse_Status", ConsensusFailBlockResponse_Status_name, ConsensusFailBlockResponse_Status_value)
	proto.RegisterEnum("ConsensusBlocksGetResponse_Status", ConsensusBlocksGetResponse_Status_name, ConsensusBlocksGetResponse_Status_value)
	proto.RegisterEnum("ConsensusChainHeadGetResponse_Status", ConsensusChainHeadGetResponse_Status_name, ConsensusChainHeadGetResponse_Status_value)
	proto.RegisterEnum("ConsensusSettingsGetResponse_Status", ConsensusSettingsGetResponse_Status_name, ConsensusSettingsGetResponse_Status_value)
	proto.RegisterEnum("ConsensusStateGetResponse_Status", ConsensusStateGetResponse_Status_name, ConsensusStateGetResponse_Status_value)
	proto.RegisterType((*ConsensusPeerMessage)(nil), "ConsensusPeerMessage")
	proto.RegisterType((*ConsensusBlock)(nil), "ConsensusBlock")
	proto.RegisterType((*ConsensusPeerInfo)(nil), "ConsensusPeerInfo")
	proto.RegisterType((*ConsensusSettingsEntry)(nil), "ConsensusSettingsEntry")
	proto.RegisterType((*ConsensusStateEntry)(nil), "ConsensusStateEntry")
	proto.RegisterType((*ConsensusRegisterRequest)(nil), "ConsensusRegisterRequest")
	proto.RegisterType((*ConsensusRegisterResponse)(nil), "ConsensusRegisterResponse")
	proto.RegisterType((*ConsensusNotifyPeerConnected)(nil), "ConsensusNotifyPeerConnected")
	proto.RegisterType((*ConsensusNotifyPeerDisconnected)(nil), "ConsensusNotifyPeerDisconnected")
	proto.RegisterType((*ConsensusNotifyPeerMessage)(nil), "ConsensusNotifyPeerMessage")
	proto.RegisterType((*ConsensusNotifyBlockNew)(nil), "ConsensusNotifyBlockNew")
	proto.RegisterType((*ConsensusNotifyBlockValid)(nil), "ConsensusNotifyBlockValid")
	proto.RegisterType((*ConsensusNotifyBlockInvalid)(nil), "ConsensusNotifyBlockInvalid")
	proto.RegisterType((*ConsensusNotifyBlockCommit)(nil), "ConsensusNotifyBlockCommit")
	proto.RegisterType((*ConsensusNotifyAck)(nil), "ConsensusNotifyAck")
	proto.RegisterType((*ConsensusSendToRequest)(nil), "ConsensusSendToRequest")
	proto.RegisterType((*ConsensusSendToResponse)(nil), "ConsensusSendToResponse")
	proto.RegisterType((*ConsensusBroadcastRequest)(nil), "ConsensusBroadcastRequest")
	proto.RegisterType((*ConsensusBroadcastResponse)(nil), "ConsensusBroadcastResponse")
	proto.RegisterType((*ConsensusInitializeBlockRequest)(nil), "ConsensusInitializeBlockRequest")
	proto.RegisterType((*ConsensusInitializeBlockResponse)(nil), "ConsensusInitializeBlockResponse")
	proto.RegisterType((*ConsensusSummarizeBlockRequest)(nil), "ConsensusSummarizeBlockRequest")
	proto.RegisterType((*ConsensusSummarizeBlockResponse)(nil), "ConsensusSummarizeBlockResponse")
	proto.RegisterType((*ConsensusFinalizeBlockRequest)(nil), "ConsensusFinalizeBlockRequest")
	proto.RegisterType((*ConsensusFinalizeBlockResponse)(nil), "ConsensusFinalizeBlockResponse")
	proto.RegisterType((*ConsensusCancelBlockRequest)(nil), "ConsensusCancelBlockRequest")
	proto.RegisterType((*ConsensusCancelBlockResponse)(nil), "ConsensusCancelBlockResponse")
	proto.RegisterType((*ConsensusCheckBlocksRequest)(nil), "ConsensusCheckBlocksRequest")
	proto.RegisterType((*ConsensusCheckBlocksResponse)(nil), "ConsensusCheckBlocksResponse")
	proto.RegisterType((*ConsensusCommitBlockRequest)(nil), "ConsensusCommitBlockRequest")
	proto.RegisterType((*ConsensusCommitBlockResponse)(nil), "ConsensusCommitBlockResponse")
	proto.RegisterType((*ConsensusIgnoreBlockRequest)(nil), "ConsensusIgnoreBlockRequest")
	proto.RegisterType((*ConsensusIgnoreBlockResponse)(nil), "ConsensusIgnoreBlockResponse")
	proto.RegisterType((*ConsensusFailBlockRequest)(nil), "ConsensusFailBlockRequest")
	proto.RegisterType((*ConsensusFailBlockResponse)(nil), "ConsensusFailBlockResponse")
	proto.RegisterType((*ConsensusBlocksGetRequest)(nil), "ConsensusBlocksGetRequest")
	proto.RegisterType((*ConsensusBlocksGetResponse)(nil), "ConsensusBlocksGetResponse")
	proto.RegisterType((*ConsensusChainHeadGetRequest)(nil), "ConsensusChainHeadGetRequest")
	proto.RegisterType((*ConsensusChainHeadGetResponse)(nil), "ConsensusChainHeadGetResponse")
	proto.RegisterType((*ConsensusSettingsGetRequest)(nil), "ConsensusSettingsGetRequest")
	proto.RegisterType((*ConsensusSettingsGetResponse)(nil), "ConsensusSettingsGetResponse")
	proto.RegisterType((*ConsensusStateGetRequest)(nil), "ConsensusStateGetRequest")
	proto.RegisterType((*ConsensusStateGetResponse)(nil), "ConsensusStateGetResponse")
}

func init() {
	proto.RegisterFile("protobuf/consensus_pb2/consensus.proto", fileDescriptor_7715b66d111f5997)
}

var fileDescriptor_7715b66d111f5997 = []byte{
	// 1282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xcd, 0x73, 0xdb, 0x44,
	0x14, 0x47, 0x76, 0x6c, 0xd7, 0x2f, 0x49, 0xe3, 0x6e, 0x03, 0x75, 0x49, 0xdb, 0xa4, 0x3b, 0xb4,
	0xcd, 0x81, 0x51, 0x86, 0x74, 0x86, 0x42, 0x86, 0x8f, 0x3a, 0x8e, 0x4a, 0x3c, 0x09, 0x76, 0x91,
	0x9d, 0x30, 0x9c, 0x34, 0x8a, 0xb5, 0x71, 0x44, 0xec, 0x95, 0xd1, 0xca, 0x61, 0x0c, 0xc3, 0x81,
	0xbf, 0x88, 0x3b, 0xdc, 0x60, 0x86, 0xff, 0x83, 0x33, 0x07, 0xb8, 0x02, 0x17, 0x46, 0xab, 0x95,
	0xbd, 0x5a, 0x7f, 0xd2, 0x99, 0x24, 0xdc, 0xb4, 0xbb, 0xbf, 0xf7, 0xf6, 0xed, 0xef, 0x7d, 0xec,
	0xd3, 0xc2, 0xe3, 0xae, 0xef, 0x05, 0xde, 0x49, 0xef, 0x74, 0xab, 0xe9, 0x51, 0x46, 0x28, 0xeb,
	0x31, 0xab, 0x7b, 0xb2, 0x3d, 0x1c, 0xe9, 0x1c, 0x80, 0xbf, 0xd7, 0x60, 0xb5, 0x1c, 0xcf, 0xbd,
	0x24, 0xc4, 0xff, 0x94, 0x30, 0x66, 0xb7, 0x08, 0x7a, 0x08, 0x4b, 0x9d, 0xe8, 0xd3, 0x0a, 0xfa,
	0x5d, 0x52, 0xd4, 0x36, 0xb4, 0xcd, 0xbc, 0xb9, 0x28, 0xe6, 0x1a, 0xfd, 0x2e, 0x41, 0x45, 0xc8,
	0x35, 0x3d, 0x1a, 0x10, 0x1a, 0x14, 0x53, 0x1b, 0xda, 0xe6, 0x92, 0x19, 0x0f, 0x11, 0x82, 0x05,
	0x6a, 0x77, 0x48, 0x31, 0xcd, 0x85, 0xf8, 0x77, 0x88, 0xbe, 0x20, 0x3e, 0x73, 0x3d, 0x5a, 0x5c,
	0xe0, 0xd3, 0xf1, 0x10, 0xff, 0xa8, 0xc1, 0xcd, 0x81, 0x0d, 0xbb, 0x6d, 0xaf, 0x79, 0x8e, 0xee,
	0xc2, 0x8d, 0x93, 0xf0, 0xc3, 0x72, 0x1d, 0xbe, 0xf3, 0x92, 0x99, 0xe3, 0xe3, 0x8a, 0x83, 0xd6,
	0x61, 0xb1, 0xeb, 0x93, 0x0b, 0xd7, 0xeb, 0xb1, 0x70, 0x35, 0xda, 0x19, 0xe2, 0xa9, 0x8a, 0x83,
	0xd6, 0x20, 0xcf, 0xdc, 0x16, 0x25, 0x7e, 0xb8, 0x9c, 0xe6, 0xcb, 0x37, 0xa2, 0x89, 0x68, 0x31,
	0x52, 0x4c, 0x7b, 0x1d, 0x6e, 0xc7, 0x82, 0x19, 0xed, 0x54, 0xed, 0x75, 0x42, 0x13, 0xbb, 0x76,
	0xbf, 0xed, 0xd9, 0x4e, 0x31, 0x13, 0x6d, 0x2a, 0x86, 0xe1, 0x0a, 0xeb, 0x75, 0x3a, 0xb6, 0xdf,
	0x2f, 0x66, 0xa3, 0x15, 0x31, 0xc4, 0x6f, 0xc3, 0xad, 0x04, 0x7f, 0x15, 0x7a, 0xea, 0xa1, 0x3b,
	0x90, 0xeb, 0x92, 0xc8, 0x80, 0xc8, 0xfa, 0x6c, 0x38, 0xac, 0x38, 0xf8, 0x39, 0xbc, 0x31, 0x40,
	0xd7, 0x49, 0x10, 0xb8, 0xb4, 0xc5, 0x0c, 0x1a, 0xf8, 0x7d, 0x54, 0x80, 0xf4, 0x39, 0xe9, 0x0b,
	0x9a, 0xc3, 0x4f, 0xb4, 0x0a, 0x99, 0x0b, 0xbb, 0xdd, 0x23, 0xfc, 0x88, 0x79, 0x33, 0x1a, 0xe0,
	0x32, 0xdc, 0x1e, 0x6a, 0x08, 0xec, 0x80, 0x44, 0xe2, 0x45, 0xc8, 0xd9, 0x8e, 0xe3, 0x13, 0xc6,
	0x84, 0x8a, 0x78, 0x18, 0xfa, 0xc2, 0xb1, 0x03, 0x5b, 0x10, 0xc5, 0xbf, 0xf1, 0x3e, 0x14, 0x07,
	0x4a, 0x4c, 0xd2, 0x72, 0x59, 0x40, 0x7c, 0x93, 0x7c, 0xd5, 0x23, 0x6c, 0xe8, 0x3b, 0x6d, 0xbc,
	0xef, 0x52, 0x49, 0xdf, 0xfd, 0x92, 0x82, 0xbb, 0x63, 0x54, 0xb1, 0x6e, 0x38, 0x87, 0xde, 0x87,
	0x2c, 0x0b, 0xec, 0xa0, 0x17, 0x19, 0x75, 0x73, 0xfb, 0xa1, 0x3e, 0x11, 0xab, 0xd7, 0x39, 0xd0,
	0x14, 0x02, 0x48, 0x07, 0x68, 0x9e, 0xd9, 0x2e, 0xb5, 0xce, 0x88, 0x1d, 0x79, 0x79, 0x71, 0x7b,
	0x45, 0x4f, 0x86, 0x89, 0x99, 0xe7, 0x90, 0x7d, 0x62, 0x3b, 0x68, 0x13, 0x32, 0x21, 0xc7, 0xac,
	0x98, 0xde, 0x48, 0x6f, 0x2e, 0x6e, 0x23, 0x7d, 0xc4, 0x2b, 0x66, 0x04, 0x40, 0x3b, 0xb0, 0xd2,
	0xf6, 0x9a, 0x76, 0xdb, 0x8a, 0x5c, 0x44, 0x4f, 0x3d, 0x1e, 0x08, 0xe3, 0x65, 0x96, 0x39, 0x34,
	0x1e, 0xe2, 0x23, 0xc8, 0x46, 0x76, 0xa2, 0x02, 0x2c, 0xd5, 0x1b, 0xa5, 0xc6, 0x51, 0xdd, 0x3a,
	0xaa, 0xd6, 0x8d, 0x46, 0xe1, 0x35, 0x94, 0x85, 0x54, 0xed, 0xa0, 0xa0, 0xa1, 0x15, 0x58, 0xdc,
	0x2d, 0xed, 0x59, 0xa6, 0xf1, 0xd9, 0x91, 0x51, 0x6f, 0x14, 0x52, 0xe8, 0x16, 0x2c, 0xd7, 0x0d,
	0xf3, 0xb8, 0x52, 0x36, 0x2c, 0xc3, 0x34, 0x6b, 0x66, 0x21, 0x8d, 0x96, 0x21, 0x5f, 0xad, 0x35,
	0x2c, 0xd3, 0x28, 0xed, 0x7d, 0x51, 0x58, 0xc0, 0x35, 0xb8, 0x37, 0xd8, 0xba, 0xea, 0x05, 0xee,
	0x69, 0x3f, 0xdc, 0xb1, 0xec, 0x51, 0x4a, 0x9a, 0x01, 0x71, 0xd0, 0x16, 0xe4, 0x87, 0xc6, 0x6a,
	0x13, 0x8d, 0xbd, 0xd1, 0x8d, 0xed, 0xdc, 0x81, 0xf5, 0x31, 0x0a, 0xf7, 0x5c, 0xd6, 0x1c, 0xe8,
	0x9c, 0x18, 0xa3, 0x5f, 0xc2, 0x9b, 0x63, 0x64, 0xe3, 0xba, 0xb0, 0x05, 0x39, 0x51, 0x03, 0x84,
	0x21, 0xaf, 0xeb, 0xe3, 0xea, 0x87, 0x19, 0xa3, 0x78, 0x3a, 0x12, 0xea, 0x44, 0x3b, 0xa5, 0x44,
	0x3a, 0xf2, 0x09, 0x9e, 0x0f, 0x77, 0x94, 0xbd, 0xb8, 0x63, 0xab, 0xe4, 0x6b, 0xf4, 0x08, 0x32,
	0x3c, 0x31, 0xc5, 0x36, 0x23, 0xbe, 0x8f, 0x56, 0xf1, 0xbb, 0x52, 0xfc, 0x49, 0x1a, 0x8e, 0xed,
	0xb6, 0xeb, 0x4c, 0x29, 0x23, 0xf8, 0x3d, 0x58, 0x1b, 0x27, 0x57, 0xa1, 0x17, 0xb3, 0x24, 0x9f,
	0x8d, 0xf0, 0xc3, 0x25, 0xcb, 0x5e, 0xa7, 0xe3, 0x06, 0xd3, 0x04, 0x57, 0x01, 0x29, 0x82, 0xa5,
	0xe6, 0x39, 0x3e, 0x49, 0x94, 0x04, 0xea, 0x34, 0xbc, 0x38, 0x13, 0xff, 0x33, 0xd5, 0x92, 0x4b,
	0x53, 0x09, 0x97, 0xfe, 0xa4, 0x49, 0x3c, 0xc7, 0x9b, 0x88, 0x1c, 0x7d, 0xa6, 0xe4, 0xe8, 0xba,
	0x3e, 0x01, 0xa9, 0x64, 0x28, 0x6e, 0x5d, 0x4a, 0x2e, 0x84, 0xca, 0x8e, 0xaa, 0x07, 0xd5, 0xda,
	0xe7, 0x55, 0xeb, 0xa5, 0x61, 0x98, 0x85, 0x0c, 0x3e, 0x94, 0x5c, 0xbc, 0xeb, 0x7b, 0xb6, 0xd3,
	0xb4, 0x59, 0xf0, 0xaa, 0x24, 0xe1, 0x1f, 0x34, 0xc9, 0x7f, 0x92, 0x3a, 0x41, 0xc7, 0x8e, 0x42,
	0x07, 0xd6, 0x27, 0x83, 0x55, 0x46, 0x2e, 0xa9, 0x3a, 0xec, 0x4a, 0xc9, 0x5c, 0xa1, 0x6e, 0xe0,
	0xda, 0x6d, 0xf7, 0x1b, 0x12, 0x65, 0x81, 0x60, 0x41, 0xb9, 0x14, 0x35, 0xf5, 0x52, 0xc4, 0xbf,
	0x69, 0xb0, 0x31, 0x59, 0x89, 0x38, 0xfb, 0x73, 0xe5, 0xec, 0x9b, 0xfa, 0x2c, 0x11, 0x95, 0x81,
	0x6f, 0x2f, 0x27, 0x26, 0x6e, 0xc1, 0x72, 0xa5, 0x7a, 0x5c, 0x3a, 0xac, 0xec, 0x59, 0xa1, 0x52,
	0xa3, 0x90, 0x09, 0xa7, 0xe2, 0x30, 0xd9, 0x3d, 0xac, 0x95, 0x0f, 0x0a, 0x59, 0xbc, 0x01, 0x0f,
	0x86, 0xa1, 0xcb, 0xaf, 0x67, 0x85, 0x26, 0xfc, 0x8f, 0x26, 0x51, 0xa9, 0x42, 0x04, 0x09, 0x1f,
	0x2b, 0x24, 0x3c, 0xd1, 0x67, 0x48, 0xa8, 0x37, 0x97, 0xd4, 0x2b, 0xa4, 0x92, 0xbd, 0xc2, 0x77,
	0x57, 0xc6, 0xce, 0x6d, 0x58, 0xe1, 0xac, 0x58, 0x43, 0x5c, 0x16, 0x3f, 0x85, 0xfb, 0x83, 0xa3,
	0xbc, 0x70, 0xe9, 0x68, 0x14, 0xc5, 0xad, 0x82, 0x26, 0xb5, 0x0a, 0x7f, 0x6b, 0x12, 0xab, 0x8a,
	0x94, 0x60, 0xec, 0x23, 0x85, 0xb1, 0xc7, 0xfa, 0x74, 0x01, 0x95, 0x30, 0xb9, 0x64, 0xa6, 0x92,
	0x25, 0xf3, 0x9a, 0x19, 0xbb, 0x2f, 0x5d, 0x12, 0x65, 0x9b, 0x36, 0x49, 0x3b, 0x11, 0x4e, 0xbf,
	0x6a, 0xd2, 0xbd, 0x9d, 0x58, 0x17, 0xcc, 0x7c, 0xa0, 0x30, 0xf3, 0x96, 0x3e, 0x0d, 0xae, 0x26,
	0xd3, 0xd9, 0x55, 0x1d, 0x1e, 0xef, 0xc8, 0xe7, 0x3c, 0x23, 0xcd, 0x73, 0x6e, 0x17, 0x8b, 0xe3,
	0x62, 0xd0, 0x34, 0xbb, 0x4e, 0x78, 0x92, 0x74, 0x78, 0x85, 0x0b, 0x0f, 0x31, 0x85, 0x04, 0x59,
	0x78, 0x0e, 0x12, 0x46, 0xe1, 0x57, 0x47, 0x42, 0xb2, 0x7c, 0x64, 0x12, 0x1d, 0x41, 0x74, 0x99,
	0x27, 0x92, 0x63, 0xca, 0xc5, 0x9e, 0xa4, 0x40, 0x16, 0x9d, 0x83, 0x82, 0x51, 0xf8, 0xff, 0x83,
	0x82, 0x4a, 0x8b, 0x7a, 0x3e, 0x79, 0x25, 0x0a, 0x12, 0xa2, 0xb3, 0x29, 0x18, 0x03, 0xbf, 0x3e,
	0x0a, 0xe4, 0x7e, 0xf2, 0x85, 0xed, 0xb6, 0xe7, 0x25, 0xe0, 0x67, 0xb9, 0xad, 0x90, 0x04, 0x67,
	0xb7, 0x15, 0x23, 0xe0, 0xeb, 0xf4, 0xff, 0xdd, 0x64, 0x97, 0xcd, 0x3e, 0x21, 0xc1, 0x5c, 0x55,
	0xe0, 0xf7, 0x44, 0x57, 0x35, 0x14, 0x9d, 0xa3, 0xab, 0x52, 0xc1, 0xea, 0xf5, 0xf0, 0x04, 0xb2,
	0x7c, 0x1b, 0x56, 0x4c, 0xf1, 0x5f, 0xbb, 0x91, 0x3f, 0x01, 0xb1, 0x7c, 0x85, 0x3c, 0x3d, 0x48,
	0x94, 0x3c, 0xf1, 0x0b, 0x3a, 0xa4, 0x0a, 0xff, 0xa1, 0x49, 0x57, 0x6d, 0x12, 0x20, 0x08, 0xf9,
	0x50, 0x21, 0xe4, 0x91, 0x3e, 0x15, 0xaf, 0x72, 0x32, 0xf8, 0x39, 0x4a, 0x4d, 0xfd, 0x39, 0xba,
	0x3c, 0x46, 0xaa, 0x35, 0xab, 0xbc, 0x5f, 0xaa, 0x54, 0xad, 0x7d, 0xa3, 0xb4, 0xc7, 0x7b, 0xf4,
	0xb5, 0x91, 0x87, 0x0d, 0x29, 0x76, 0xa6, 0xbc, 0xe7, 0x20, 0x58, 0x38, 0x27, 0xfd, 0xc8, 0xb9,
	0x79, 0x93, 0x7f, 0xe3, 0xbf, 0xe4, 0x6a, 0x92, 0x50, 0x37, 0xbb, 0x9a, 0x8c, 0x81, 0xab, 0xec,
	0xbd, 0x03, 0x39, 0x42, 0x03, 0xdf, 0x25, 0x71, 0x48, 0xdd, 0xd1, 0xc7, 0xbf, 0xca, 0x98, 0x31,
	0xee, 0x0a, 0x63, 0xab, 0x2e, 0xbd, 0xcd, 0xf0, 0x07, 0x9e, 0xf9, 0x68, 0xbc, 0x07, 0x79, 0xf1,
	0xe2, 0x43, 0x62, 0x2e, 0x87, 0x13, 0xf8, 0x4f, 0x4d, 0xca, 0xec, 0xa1, 0xd6, 0xd9, 0xcf, 0x34,
	0x2a, 0x76, 0xf4, 0x99, 0x46, 0xa1, 0x72, 0x55, 0x1f, 0xf3, 0x3c, 0x75, 0x0d, 0x3c, 0x9e, 0x64,
	0xf9, 0x03, 0xe7, 0xd3, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x28, 0x80, 0xfd, 0x50, 0x0a, 0x15,
	0x00, 0x00,
}
